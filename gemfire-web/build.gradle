apply plugin: 'war'

dependencies {
  runtime 'org.springframework:spring-aspects:' + project.'springframework.version'
  runtime 'org.springframework:spring-oxm:' + project.'springframework.version'
  runtime 'commons-fileupload:commons-fileupload:' + project.'commons-fileupload.version'

  testCompile 'org.springframework:spring-test:' + project.'springframework.version'
  
  provided 'javax.servlet:javax.servlet-api:' + project.'javax.servlet-api.version'
   
  // have to use output since we exclude the dependent classes from jar :(
  provided project(path: ':gemfire-core', configuration: 'classesOutput')
  
  testRuntime project(':gemfire-common')
  testRuntime project(':gemfire-core')

  provided project(path: ':gemfire-junit', configuration: 'testOutput')
}

//Remove the gradle output directories from the eclipse classpath. These
//are added by the classesOutput configuration, above. Unfortunately, using
//minusConfigurations does not work here, because it removes the entire
//gemfire-core project
eclipse.classpath.file {
    whenMerged { classpath ->
        classpath.entries.removeAll { entry -> entry.path.contains('gemfire-core/build')}
    }
}
idea.module.iml {
  whenMerged {module ->
     module.dependencies.removeAll { entry -> entry.toString().contains('gemfire-core/build')}
  }
}

artifacts {
  archives jar
}

war {
  classpath configurations.runtime 
  classpath project(':gemfire-core').webJar.archivePath
}
